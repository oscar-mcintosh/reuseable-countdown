{"version":3,"file":"index-5b057d90.js","sources":["../../../../components/Counter.vue","../../../../components/CountDown.vue","../../../../pages/index.vue"],"sourcesContent":["<template>\r\n  <div class=\"countdown__text-wrap bordered\">\r\n    <p class=\"hard-coded\">{{month}}-{{date}}-{{year}}</p>\r\n    <div v-if=\"loaded\" class=\"row\">\r\n      <div class=\"date\">\r\n          <span class=\"days\">\r\n          {{ displayDays }}\r\n          </span>\r\n          <div class=\"label countdown__text-info\">D</div>\r\n        </div>\r\n      <span class=\"leading-snug\">:</span>\r\n      <div class=\"date\">\r\n          <span class=\"hours\">\r\n          {{ displayHours }}\r\n          </span>\r\n          <div class=\"label countdown__text-info\">H</div>\r\n        </div>\r\n      <span class=\"leading-snug\">:</span>\r\n      <div class=\"date\">\r\n          <span class=\"minutes\">\r\n          {{ displayMinutes }}\r\n          </span>\r\n          <div class=\"label countdown__text-info\">M</div>\r\n        </div>\r\n      <span class=\"leading-snug\">:</span>\r\n      <div class=\"date\">\r\n          <span class=\"seconds\">\r\n              {{ displaySeconds }}\r\n          </span>\r\n          <div class=\"label countdown__text-info\">S</div>\r\n        </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, computed, onMounted } from 'vue';\r\n\r\nconst props = defineProps(['year', 'month', 'date', 'hour', 'minute', 'second', 'millisecond']);\r\n\r\nconst displayDays = ref(0);\r\nconst displayHours = ref(0);\r\nconst displayMinutes = ref(0);\r\nconst displaySeconds = ref(0);\r\nconst loaded = ref(false);\r\nconst expired = ref(false);\r\n\r\nconst _seconds = 1000;\r\nconst _minutes = computed(() => _seconds * 60);\r\nconst _hours = computed(() => _minutes.value * 60);\r\nconst _days = computed(() => _hours.value * 24);\r\n\r\n// Define the 'end' variable here based on the props\r\nconst end = computed(() => {\r\n  return new Date(\r\n    props.year,\r\n    props.month - 1,\r\n    props.date,\r\n    props.hour,\r\n    props.minute,\r\n    props.second,\r\n    props.millisecond\r\n  );\r\n});\r\n\r\nconst formatNum = (num) => (num < 10 ? '0' + num : num);\r\n\r\nconst showRemaining = () => {\r\n  const timer = setInterval(() => {\r\n    const now = new Date();\r\n    const distance = end.value.getTime() - now.getTime();\r\n\r\n    if (distance < 0) {\r\n      clearInterval(timer);\r\n      expired.value = true;\r\n      return;\r\n    }\r\n\r\n    const days = Math.floor(distance / _days.value);\r\n    const hours = Math.floor((distance % _days.value) / _hours.value);\r\n    const minutes = Math.floor((distance % _hours.value) / _minutes.value);\r\n    const seconds = Math.floor((distance % _minutes.value) / _seconds);\r\n    displayMinutes.value = formatNum(minutes);\r\n    displaySeconds.value = formatNum(seconds);\r\n    displayHours.value = formatNum(hours);\r\n    displayDays.value = formatNum(days);\r\n    loaded.value = true;\r\n  }, 1000);\r\n};\r\n\r\nonMounted(showRemaining);\r\n</script>\r\n\r\n<style lang=\"css\" scoped>\r\n\r\nsection{\r\n    align-content: center;\r\n}\r\n\r\n.row{\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n\r\n.grid{\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n}\r\n\r\nh5{\r\n    margin-bottom: 3rem;\r\n}\r\n\r\n.date{\r\n  text-align: center;\r\n  font-size: 1.3rem;\r\n  margin: 10px 0;\r\n  border: 1px solid #087e8b;\r\n  position: relative;\r\n  padding: 1rem;\r\n  border-radius: 5px;\r\n}\r\n\r\n.date span{\r\n  font-size: 1.4rem;\r\n}\r\n\r\n.days .hours .minutes .seconds{\r\n    position: relative;\r\n    text-align: center;\r\n    font-size: 1.4rem;\r\n    color: blue;\r\n}\r\n\r\n.days{\r\n    padding-left: 0;\r\n}\r\n.time{\r\n    font-size: 1.8rem;\r\n    color: black;\r\n    text-align: center;\r\n}\r\n.label{\r\n    color: #c81d25;\r\n    letter-spacing: .5px;\r\n    padding: 1rem 0;\r\n    text-transform: uppercase;\r\n    font-weight: 700;\r\n    font-size: .713rem;\r\n    position: absolute;\r\n    top: -1.1rem;\r\n    left: 2px;\r\n    padding: 5px;\r\n    background-color: rgba(255, 255, 255, 1);\r\n}\r\n .rows{\r\n     display: flex;\r\n }\r\n\r\n .leading-snug{\r\n     margin: auto;\r\n }\r\n\r\n .hard-coded{\r\n   margin-bottom: 30px;\r\n   color: #c81d25;\r\n   font-weight: 500;\r\n }\r\n</style>","<template>\r\n  <div>\r\n    <h1>Dynamic Counter</h1>\r\n    <div class=\"counter\">\r\n      <h2>Select a Date and Time</h2>\r\n      <input\r\n        type=\"datetime-local\"\r\n        id=\"selectedDateTime\"\r\n        v-model=\"selectedDateTime\"\r\n        @input=\"handleDateTimeInput\"\r\n      />\r\n      <p class=\"input\" v-if=\"selectedDateTime\">You Selected : {{ formattedSelectedDateTime }}</p>\r\n\r\n      <Counter v-if=\"selectedDateTime\"\r\n        :year=\"selectedYear\"\r\n        :month=\"selectedMonth\"\r\n        :date=\"selectedDate\"\r\n        :hour=\"selectedHour\"\r\n        :minute=\"selectedMinute\"\r\n        :second=\"selectedSecond\"\r\n        :millisecond=\"selectedMillisecond\"\r\n      />\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n\r\n<script setup>\r\nimport { ref, watch } from 'vue';\r\n\r\nconst selectedDateTime = ref('');\r\nconst formattedSelectedDateTime = ref('');\r\nconst selectedYear = ref();\r\nconst selectedMonth = ref();\r\nconst selectedDate = ref();\r\nconst selectedHour = ref();\r\nconst selectedMinute = ref();\r\nconst selectedSecond = ref();\r\nconst selectedMillisecond = ref();\r\n\r\n// Method to handle the input event and update selectedDateTime\r\nconst handleDateTimeInput = (event) => {\r\n  selectedDateTime.value = event.target.value;\r\n};\r\n\r\n// Watch for changes in selectedDateTime and update the computed properties\r\nwatch(selectedDateTime, () => {\r\n  const dateTime = new Date(selectedDateTime.value);\r\n\r\n  // Extract individual date and time components\r\n  selectedYear.value = dateTime.getFullYear();\r\n  selectedMonth.value = dateTime.getMonth() + 1;\r\n  selectedDate.value = dateTime.getDate();\r\n  selectedHour.value = dateTime.getHours();\r\n  selectedMinute.value = dateTime.getMinutes();\r\n  selectedSecond.value = dateTime.getSeconds();\r\n  selectedMillisecond.value = dateTime.getMilliseconds();\r\n\r\n  // Format selected date and time for display\r\n  formattedSelectedDateTime.value = dateTime.toLocaleString();\r\n});\r\n\r\n// Expose data to the template\r\n{\r\n  selectedDateTime,\r\n  formattedSelectedDateTime,\r\n  selectedYear,\r\n  selectedMonth,\r\n  selectedDate,\r\n  selectedHour,\r\n  selectedMinute,\r\n  selectedSecond,\r\n  selectedMillisecond,\r\n  handleDateTimeInput\r\n}\r\n</script>\r\n\r\n<style scoped>\r\nh1{\r\n  color: #c81d25;\r\n}\r\n.counter{\r\n  background-color: rgba(255, 255, 255, .5);\r\n  backdrop-filter: blur(10px);\r\n  width: 100%;\r\n  padding: 20px;\r\n}\r\n\r\ninput{\r\n  padding: 5px;\r\n  margin: 15px 0;\r\n}\r\n\r\n.counter h2{\r\n  color: #087e8b;\r\n  font-size: 1.5rem;\r\n}\r\n\r\n.counter p{\r\n  font-size: 1.2rem;\r\n  font-weight: 500;\r\n    margin: 15px 0 30px;\r\n    letter-spacing: 1px;\r\n    color: #0b3954;\r\n}\r\n</style>","<template>\r\n    <div class=\"counter__home\">\r\n        <div class=\"grid\">\r\n            <CountDown />\r\n            <CountDown />\r\n            <CountDown />\r\n\r\n        </div>\r\n        <div class=\"grid\">\r\n            <div>\r\n                <h2>Hard Coded Dates</h2>\r\n                <div class=\"counter\">\r\n                    <Counter                                             \r\n                        :year=\"2024\"\r\n                        :month=\"2\"\r\n                        :date=\"22\"\r\n                        :hour=\"23\"\r\n                        :minute=\"23\"\r\n                        :second=\"22\"\r\n                        :millisecond=\"22\"\r\n                    />\r\n                </div>\r\n            </div>\r\n                <div>\r\n                    <h2>Hard Coded Dates</h2>\r\n                    <div class=\"counter\">\r\n                        <Counter                                             \r\n                            :year=\"2024\"\r\n                            :month=\"2\"\r\n                            :date=\"21\"\r\n                            :hour=\"23\"\r\n                            :minute=\"23\"\r\n                            :second=\"22\"\r\n                            :millisecond=\"22\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n            <div>\r\n                <h2>Hard Coded Dates</h2>\r\n                <div class=\"counter\">\r\n                    <Counter                                             \r\n                        :year=\"2024\"\r\n                        :month=\"2\"\r\n                        :date=\"10\"\r\n                        :hour=\"23\"\r\n                        :minute=\"23\"\r\n                        :second=\"22\"\r\n                        :millisecond=\"22\"\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\n\r\n\r\n</script>\r\n\r\n<style >\r\n\r\n* {\r\n    box-sizing: border-box;\r\n    padding: 0;\r\n    margin: 0;\r\n  }\r\n\r\n  body{\r\n      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\r\n      height: 100vh;\r\n  }\r\n\r\n  .counter{\r\n    /* border: 1px solid #dedede; */\r\n    background-color: rgba(255, 255, 255, .5);\r\n    backdrop-filter: blur(10px);\r\n    width: 100%;\r\n    padding: 20px;\r\n  }\r\n\r\n    .counter__home{\r\n        width: 100%;\r\n        display: grid;\r\n        gap: 20px;\r\n        place-items: center;\r\n        background: black;\r\n        color:aliceblue;\r\n        padding: 0 50px;\r\n        height: 100vh;\r\n    }\r\n\r\n    .counter__home h2{\r\n        color: #087e8b;\r\n    }\r\n\r\n    .counter__thumb{\r\n        display: flex;\r\n        padding: 20px 0;\r\n        width: 100%;\r\n        justify-content: space-between;\r\n    }\r\n\r\n    .grid{\r\n        display: grid;\r\n        grid-template-columns: repeat(3, 1fr);\r\n        gap: 20px;\r\n        width: 100%;\r\n    }\r\n</style>"],"names":["_ssrRenderComponent"],"mappings":";;;;;;;;;;;;;;;;;AA+CA,MAAM,WAAW;;;;;;;AAPjB,UAAM,cAAc,IAAI,CAAC;AACzB,UAAM,eAAe,IAAI,CAAC;AAC1B,UAAM,iBAAiB,IAAI,CAAC;AAC5B,UAAM,iBAAiB,IAAI,CAAC;AAC5B,UAAM,SAAS,IAAI,KAAK;AACR,QAAI,KAAK;AAGzB,UAAM,WAAW,SAAS,MAAM,WAAW,EAAE;AAC7C,UAAM,SAAS,SAAS,MAAM,SAAS,QAAQ,EAAE;AACnC,aAAS,MAAM,OAAO,QAAQ,EAAE;AAGlC,aAAS,MAAM;AACzB,aAAO,IAAI;AAAA,QACT,MAAM;AAAA,QACN,MAAM,QAAQ;AAAA,QACd,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,QACN,MAAM;AAAA,MACV;AAAA,IACA,CAAC;;;;;;;;;;;;;;;;;;;;;;;;AChCD,UAAM,mBAAmB,IAAI,EAAE;AAC/B,UAAM,4BAA4B,IAAI,EAAE;AACxC,UAAM,eAAe,IAAG;AACxB,UAAM,gBAAgB,IAAG;AACzB,UAAM,eAAe,IAAG;AACxB,UAAM,eAAe,IAAG;AACxB,UAAM,iBAAiB,IAAG;AAC1B,UAAM,iBAAiB,IAAG;AAC1B,UAAM,sBAAsB,IAAG;AAQ/B,UAAM,kBAAkB,MAAM;AAC5B,YAAM,WAAW,IAAI,KAAK,iBAAiB,KAAK;AAGhD,mBAAa,QAAQ,SAAS;AAC9B,oBAAc,QAAQ,SAAS,SAAQ,IAAK;AAC5C,mBAAa,QAAQ,SAAS;AAC9B,mBAAa,QAAQ,SAAS;AAC9B,qBAAe,QAAQ,SAAS;AAChC,qBAAe,QAAQ,SAAS;AAChC,0BAAoB,QAAQ,SAAS;AAGrC,gCAA0B,QAAQ,SAAS;IAC7C,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChDwB,QAAIA,mBAAM,oBAAA;AAAA,IACV;IACA,OAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAA;AAAA;;;AAQI,QAAIA,mBAAM,oBAAA;AAAA,IACV;IACA,OAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAA;AAAA;;;AAQJ,QAAIA,mBAAM,oBAAA;AAAA,IACV;IACA,OAAQ;AAAA,IACR,MAAM;AAAA,IACN,MAAM;AAAA,IACN,QAAQ;AAAA,IACR,QAAA;AAAA;;;;;;;;;;;"}